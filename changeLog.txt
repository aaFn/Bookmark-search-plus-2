Release notes:
--------------
Please find here the release notes, TODO's and some limitations I know of today.
- 2.0.50 Bugs & Improvements
    - Added a native FF context menu extension for bookmarks, to show their path. This is adding a
      "BSP2 Show path to bookmark item" specific submenu, to display the path to the bookmark item.
      For now, this works only on bookmarks toolbar or menu. This doesn't currently work for bookmark sidebar and
      library window items ... cf. API limitation on "bookmark" type
        -> https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/ContextType
      Let's hope it will be enabled by FF also on the bookmark sidebar and library window one day !
      **This is requiring a new "menus" permission**, which I updated here
        -> https://github.com/aaFn/Bookmark-search-plus-2/wiki/Permissions-and-Privacy-policy
    - Fixed the BSP2 icon not always appearing on the FF Add-ons management page.
    - Fixed a bug where an exception could occur on favicon load and convert to 16x16, when arriving after
      bookmark delete in a rapid sequence of add / delete.
    - Fixed a bug where the "Most visited" and "Recently Bookmarked" lists would not properly refresh if the
      old list was fully included from position 0 in the new list (i.e. new list having items
      additional to the old list, after its end).
    - Fixed rare cases of wrong search results displayed when browser.bookmarks.search() has long
      durations before sending back the Promise result, and there were things changing in between in the
      input box, or there were several searches queued and dispatched after last key stroke.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/72
- 2.0.49 Bugs & Improvements
    - Corrected a rare bug where dragging an element from outside the sidebar, to the sidebar, after having
      dragged a bookmark item inside it, was forbiding to drop the new element before or after the place of
      the old dragged bookmark item.
    - Added an option to space bookmark items. Default is 0px, and fyi native bookmark sidebar is 6px.
      I gave a max of 10px. Increments are by 2px because each increment is adding 1px on each side (top and
      bottom) of items.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/78
- 2.0.48 Bugs & Improvements
    - Corrected height of separator bookmark items, which were 1 pixel more than other bookmark items.
    - Removed the annoying effect of tree wobbling below the blue insert line, when dragging and dropping
      bookmark items.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/77
    - Made the blue insertion line thicker to better visually highlight the insertion point when dragging
      and dropping. This is also aligning with the native bookmark sidebar insertion line thickness.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/77
    - Removed the default annoying focus-ring which would now become visible under Linux as a side effect
      of above modifications.
- 2.0.47 Bugs
    - Corrected a bug where it was possible to drag & drop a bookmark item onto a special "place:" folder.
    - Corrected a bug where resetting to default sidebar shortcut in the options page was not effective
      immediately in case of 2 modifiers in the default combination (e.g. under Linux). 
- 2.0.46 Improvements
    - Improved the mouse hovering pointer behavior on folders, to indicate which part of the line is going
      to have an open/close action on the folder, and which part will only do a select.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/73
    - Changed the span of folder text so that the blank part at right can become an inactive part, like for
      bookmarks, leaving only the twistie, folder favicon and text as active parts.
    - Changed the middle and right clicks behavior to also do a select and keyboard focus.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/73
      Updated table in https://github.com/aaFn/Bookmark-search-plus-2/wiki/Mouse-clicks-and-modifiers-summary-table-(as-of-2.0.46-)
      to reflect it.
    - Added an option to customize the add-on shortcut (only available with FF >= 60).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/74
    - Added the path to bookmark item in the Properties dialog.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/74
    - Added support for multiple tabs drag and drop for creating bookmarks, which comes with FF64.
- 2.0.45 Improvements
    - Added handling of left and right keyboard arrows on folders and bookmarks, as per native Bookmark
      sidebar.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/73
    - Added keyboard navigation in search result pane with support for up, down, pageUp, pageDown, home, end
      and enter keys (and shift+enter as well as ctrl+enter and alt+enter).
      Still missing for context menus, to come in a later release.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/46
    - Added support for "Enter" key inside the search box = it now sets the keyboard focus on the first
      search result (if any), to allow for further keyboard based navigation in the search result list.
- 2.0.44 Improvements
    - As it looks like this FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=1396364 is gettting worse
      than before, add a trace just before calling the FF API to see in the console that we are waiting for
      the FF API to return to us, in case things seem stuck.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/72
- 2.0.43 Bugs & Improvements
    - Simplification of the code to save the bookmark tree in local storage, in order to reduce the number
      of objects to garbage collect and to ease the GC work.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/64
- 2.0.42 Bugs & Improvements
    - Improved bug catching when a trap is happening in nested promises and an outer try{} or .then()
      statement has a catch() part.
      It appears that errors in the inner promise .then() statement are not (anymore ??) caught
      properly on the browser console and not showing there, resulting in "silent failures".
      There is now a .catch() statement also in these nested promises to make sure the trap is logged.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/65
    - Removed showing bookmark in bookmarks pane when left clicking on a search result with Shift, Ctrl or
      Alt pressed at same time. This is to allow for results multi-selection in a later release, without
      changing the scope of what is shown in the bookmark pane, as per
        https://github.com/aaFn/Bookmark-search-plus-2/issues/66
      and summarized in
        https://github.com/aaFn/Bookmark-search-plus-2/wiki/Mouse-clicks-and-modifiers-summary-table-(as-of-2.0.42-)
    - Removed showing bookmark when middle or right clicking on a search result. This is to allow for
      actions on search results without changing the scope of what is shown in the bookmark pane, as per
        https://github.com/aaFn/Bookmark-search-plus-2/issues/66
      and summarized in
        https://github.com/aaFn/Bookmark-search-plus-2/wiki/Mouse-clicks-and-modifiers-summary-table-(as-of-2.0.42-)
    - Improved search result pane to reflect cut status of original bookmarks (they are dimmed when cut),
      when opening, and real time refresh when a result list is already active.
      This is in preparation to support having "cut" and "copy" actions added to the search results context
      menu.   
        https://github.com/aaFn/Bookmark-search-plus-2/issues/66
    - Added Cut and Copy actions in the search result pane right click context menu.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/66
    - Allow drag and drop from search result pane into the bookmark pane, for move of the real bookmark at
      dropped place. Note: this results in a copy when Ctrl is pressed at the same time than drop.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/66
- 2.0.41 Bugs & Improvements
    - Improved to catch the mouse middle button click at "mousedown" event and to prevent the default FF
      autoscroll feature to activate itself when middle clicking on a bookmark inside the sidebar. This will
      now only open the bookmark in a separate tab, without doing "fancy" things in the sidebar itself.
    - Changed behavior to not trigger (search bookmark + update favicon) on a tab update when we are in pause
      favicon fetching.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/64
    - Improved the Most visited special folder handling in FF63 and upper to take advantage of FF API
      topSites.get() now proposing the "includeFavicon" option. This returns the favicon of each item as a
      "data:" URI, avoiding favicon fetching.
      Also using the "limit" option to limit to 10 items instead of trunking the resulting array, for call
      efficiency.
        https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/topSites/get
    - Improved to use browser.runtime.getBrowserInfo() instead of Navigator.BuildID to retrieve browser
      version for adapting to functions varying by version. Indeed, with FF64, Navigator.BuildID is returning
      a fixed value and cannot be used anymore ...
        https://bugzilla.mozilla.org/show_bug.cgi?id=583181
    - Corrected a bug of not catching an error on favicon fetching for an undocumented case where
      Response.blob() ends in error, in some cases of favicon getUri() retrieval. This was interrupting
      the favicon fetching process with no hope of getting the next favicons. 
- 2.0.40 Bugs & Improvements
    - Corrected a regression where modified tab events with favicon already coded as data: URL were not
      properly handled.
    - Better handling of visited URL history cleaning when opening bookmark property popups, and better
      handling of modified tab events to get tab favicons.
    - Added feature of copying bookmark item when the Ctrl key is pressed while dragging and dropping,
      like in native bookmark sidebar.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/63
    - Added keyboard navigation in bookmarks pane with support for up, down, pageUp, pageDown, home, end,
      delete and enter keys (and shift+enter as well as ctrl+enter).
      Still missing for context menus and search result keyboard, to come in a later release.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/46
    - Corrected a bug when refreshing contents of the most visited special folder, not showing the latest
      list.
- 2.0.39 Bugs
    - Corrected a bug where opening properties on a bookmark item whose title contained "&" was improperly
      showing in the property window, and was changing (trunking) the title of the bookmark.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/58
- 2.0.38 Bugs
    - Corrected a bug where dragging & dropping a tab with a URL containing "#" could end up with wrong open
      tab being bookmarked (bug in a workaround for an FF bug on browser.tabs.query() which returns an empty
      array of tabs when the searched url contains # :-( ).
- 2.0.37 Bugs
    - Corrected a bug where after some error conditions, background favicon fetching would stop until next
      FF restart.
- 2.0.36 Bugs & Improvements
    - Added folder sort function, respecting separators like in Native bookmark sidebar and library:
      - Sorting is case insensitive
      - Separators are sorting "frontiers" = sorting is executed only inside portions delimited by
        separators. I.e. two lists of bookmarks on each side of a separator in a folder are not sorted
        together, but sorted individually.
      - Folders are put at front before bookmarks in each individual list.
      - Cf. https://github.com/aaFn/Bookmark-search-plus-2/issues/43
    - Added robustness checks to detect corruptions on saved bookmark tree, and force a reload of
      the bookmark tree from the FF API.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/52
    - Support for modified tabs notification when there is a cached page reload (internal URL in
      "wyciwyg://"). Cf. https://en.wikipedia.org/wiki/WYCIWYG
- 2.0.35 Bugs & improvements
    - Catch some background task errors resulting in "Wait background load..." hang and report them
      in the console log.
      Please report those errors on GitHub by copying the console contents on:
        https://github.com/aaFn/Bookmark-search-plus-2/issues/52 
    - Realized TODO: added using browser.topSites API to fill the Most Visited special bookmark for those
      who have it. It was so far just a special icon / bookmark item without any href, or item).
      It is now a folder with up to 10 items inside, and is the best possible approximation to the
      "Most Visited" special folder in the native Bookmark sidebar if present, by using the same list as
      new page top sites.
      This requires a new permission :-( = topSites permission is onw required.
    - Realized TODO: added using browser.bookmarks.getRecent() to fill the "Recently Bookmarked" special
      bookmark for those who have it. It was so far just a special icon / bookmark item without any href
      or item.
      It is now a folder with up to 10 items inside, and is fully aligned with the "Recently Bookmarked"
      special folder in the native Bookmark sidebar, if present.
    - Aligned with latest FF behavior to not anymore open the bookmark property window when dragging
      and dropping a link from a page, or the (i) icon in the address bar, to the bookmarks tree.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/37
    - Added an option to change the font size of the bookmarks to suit your taste, between 10 px and 16 px.
      Default is 12 px when the option is not set.
         https://github.com/aaFn/Bookmark-search-plus-2/issues/56
- 2.0.34 Improvements
    - Added a "Go parent folder" action on the context menu, both for result and for bookmark pane rows.
      Quite useful for folders with 100 or more rows, to avoid to scroll up looking or the first less
      indented item (which is also eye tiring, in particular when earlier sibblings are open folders).
       https://github.com/aaFn/Bookmark-search-plus-2/issues/55
- 2.0.33 Bugs
    - Corrected a regression when sorting bookmarks inside a folder from the bookmark library, where
      things were not displayed in right order in the folder being sorted (had to switch the sidebar
      off and on to get things displayed right).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/43
    - Corrected a bug where moving the last bookmark of the boookmark panel to its place (on reorder)
      was failing and making the bookmark invisible until next add-on recycle.
    - Corrected a bug where adding a bookmark item inside an empty folder located at end of the
      bookmarks panel was making the inserted object visible while the folder was closed.
    - Corrected a bug when bookmarks were deleted while retrieving their favicon, which was generating
      an exception. This was having no effect, but it is cleaner to not get any exception :-)
- 2.0.32 Bugs
    - Corrected a bug where the saved state may not deserialize properly and would return a null
      object, thus leaving BSP2 hanging in "Wait background load..." state.
      Now checking the returned value, and if null, forcing an FF API reload, which is longer
      but should always work.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/52
- 2.0.31 Bugs
    - Corrected a bug where OS Platform was not always identified from start in the sidebar (to set
      OS specifics for display), because of the sidebar running faster than the background page.
- 2.0.30 Bugs & improvements
    - Corrected a bug where pause favicons fetching was not respected when loading bookmarks
      from FF API.
    - Improved to maintain counters all the time and not only during initial load. Added a counter
      for number of favicons remaining to fetch.
    - Corrected a bug on folders counting where "root________" was counted, while it is not visible.
    - Display counters as stats in the options panel, including a progress indicator of favicon
      fetching (0.0% means no more favicon to fetch).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/49
    - Corrected a bug when deleting a folder holding children where these were not removed from the
      internal cache.
      It is recommended to hit the "Reload from FF API now" button once in the add-on options panel
      to fully resync, although this shouldn't really create any problem, so I am not going to force
      it on update.
- 2.0.29 Bugs & improvements
    - Corrected a bug on migrating from old save structure before 2.0.18 when in the new background
      task of 2.0.27+.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/50
    - Increased a little more the spacing between saves on massive favicon operations, as it appears
      that some people still get the FF memory hungry monster active ..
        https://github.com/aaFn/Bookmark-search-plus-2/issues/49
    - Avoid saving to local store a favicon if it is the same as previously. This reduces the chances
      to activate the FF memory hungry monster :-)  
        https://github.com/aaFn/Bookmark-search-plus-2/issues/49
    - Added information in options panel that Disable favicon fetching clears the cached favicons
      (implying a refetch when the option will be disabled later ..).
    - Added an option to "Pause favicon fetching option" which stops the fetch but keeps things already
      fetched in the cache. The fetch process can be restarted at anytime by coming back to "Active".
        https://github.com/aaFn/Bookmark-search-plus-2/issues/49
- 2.0.28 Bugs & improvements
    - Bug introduced in 2.0.27 with BSP2 waiting indefinitely on "Load FF API..". This was due
      to a misunderstanding from me on how to use browser.runtime.onInstalled.addListener() = no
      event is sent on it when FF regularly restarts, but the code was waiting on it to systematically
      arrive in order to decide if we need to reload bookmarks from the FF API to resync or not .. and
      so it was hanging on normal FF restarts.
      This was working perfectly during test because the addon was tested as a temporary addon, and this
      event always gets fired in such a mode ...
      Cured by setting a 20 ms timeout on it, should suffice .. If timeout, this means no update
      nor install.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/5
    - Removed browser console traces on exchanged message with background task. They are not needed now.
- 2.0.27 Bugs & improvements
    - Implemented optimization of loading the bookmark tree from local store where the add-on keeps
      it up to date, instead of from FF API each time. 
      This should be the second major improvement for users with many bookmarks, after the
      display acceleration in 2.0.26.
      On my system, this is dividing by two the initial time before the tree is available when
      starting FF, and dividing by 4 when switching off and on the sidebar with the Action button
      in the toolbar (or with the shortcut key). Gains should be much bigger with high number of
      bookmarks.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/5
      This is roughly making no difference when the add-on is first installed, since on install
      we have to read the FF API to get the initial bunch of bookmarks.
    - Added an option to revert to old behavior of loading the bookmark tree from FF API at each
      load.
    - Adde a button on the options page to force FF API tree reload (disabled when in old behavior).
    - Corrected a regression introduced in 2.0.26 where a bookmark drag and drop was not displaying
      the favicon.
    - Improved to interpret options changes real time and not on next activation.
    - Disable "leave bookmark tree open" in options when "close search pane" is set.
    - Some cleaning of code in favicon fetching.
    - Corrected a 2.0.26 regression where the context menu was not showing when right clicking on
      folder favicon.
    - Added feature of displaying a suggested title calculated from the URL when a bookmark title
      is empty - coming from pull request from jun1x
        https://github.com/aaFn/Bookmark-search-plus-2/pull/45 
- 2.0.26 Improvements
    - Accelerated display phase by a factor between 2 and 4 depending on cases, by using cloneNode()
      techniques, background images for folders and for disabled favicon mode, and most of all by
      deferring favicon display (which is the longest piece) out of the main cycles, in background
      after the main display is done. Total time is roughly the same than before or a little inferior,
      however the bookmark tree pane is available much before.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/5
    - Added an option to revert to old favicon display behavior during main display phase, and to
      not defer them, in case the new behavior would create problems for some users. It is not
      disabling the usage of cloneNode() though, which is supposed to always have a gain.
- 2.0.25 Improvements
    - Support working with the websites.resistFingerprinting setting as manipulated in the
      Privacy Settings add-on, which alter the Navigator.buildID returned value.
        https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/privacy/websites
- 2.0.24 Improvements
    - Reproduced the native bookmarks behavior on Shift and Ctrl Keys:
        https://github.com/aaFn/Bookmark-search-plus-2/issues/44
    - And therefore, changed Shift to Alt to force opening the clicked bookmark in non-advanced
      mode:
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3
- 2.0.23 Bug
    - Removed the annoying "force trace" textarea left by error from a temporary version made for
      investigating issue https://github.com/aaFn/Bookmark-search-plus-2/issues/40.
      - See https://github.com/aaFn/Bookmark-search-plus-2/issues/42
      - Sorry for the inconvenience.
- 2.0.22 Bugs & improvements
    - Corrected a bug when the add-on was stopped while the favicon of a bookmark was being
      fetched, where the favicon was not reset to be fetched when restarting.
    - Introduced a priority process for manual "Refresh favicon" and for existing modified
      bookmark favicon retrieval, over initial favicon massive load on install of BSP2
      = insert at head of queue, for imediate responsiveness to user action (instead of waiting
      the end of the massive load, which might be interrupted by an FF stop, and so the manual
      refresh request would be lost).
    - Significantly reduced amount of local storage and duration of load and save of bookmark
      tree by tuning the objects to save and by pre-jsonifying those objects instead of relying
      entirely on the FF API.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/40
    - Reduced further the memory saw phenomenon at initial massive favicon fetching which is
      happening when calling the FF API local storage set() function, by dynamically spacing them
      function of frequency of modifications to the tree, and by reducing the size of what to save. 
        https://github.com/aaFn/Bookmark-search-plus-2/issues/40
    - Added error handling on storage saves to detect a few errors which can come back from
      the FF API implying corruption of the saves .. However not all is coming back from the FF API,
      so this cannot catch all the cases, far from it .. :-(
    - Introduced a resiliency option of dual save slots (flip-flop) for people having trouble with
      local storage getting corrupted when FF is low on memory or getting out of memory.
      If the option is activated, each save to local store will take the other slot than previous
      save, preserving a fallback in case the last save was corrupted.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/40
    - Some cleanup on options format in local storage.
- 2.0.21 Improvements
    - Added intermediate messages on the status when initially loading the sidebar, to better
      visually track each step. And if one is blocking load, identify which one it is. 
        https://github.com/aaFn/Bookmark-search-plus-2/issues/40
- 2.0.20 Bugs & improvements
    - Accelerated setting zones of no-drop or no-paste when dragging or cutting a folder
      with many bookmarks inside.
    - Also show bookmark in the bookmark pane when right clicking on a result in the search pane.
      (any click on a result row in the search pane should show the source bookmark)
    - Corrected a regression where dragging a link from a web page to the bookmarks tree pane
      was not creating a new bookmark. Introduced in 2.0.18.
    - Tried to decrease somewhat further amplitude of the memory "saw phenomenon" when saving
      favicons while fetching or converting them massively, by spacing further two continuous
      saves to local store (hysteris increased from 3s to 5s), to leave more time to the Garbage
      Collector to act.
      Also introduced a delay of 60s between tree build at load time and first favicon being
      retrieved in background, to give time to things to stabilize after display, and to users
      to Disable favicon fetching in the options panel and recycle the add-on for it to take
      effect, in case the memory saw phenomenon due to favicon fetching is really annoying
      and creating problems.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/40
- 2.0.19 Bugs & improvements
    - Corrected an internal error happening during some drag operations. Apparently without
      consequence, but cleaner without.
        See https://github.com/aaFn/Bookmark-search-plus-2/issues/35
    - Corrected a regression where "Open parent folder(s)" menu item was not showing anymore
    - Accelerated execution of "Open parent folder(s)" when there are big numbers of bookmarks
      between row and its ancestors.
    - Corrected a bug where showing a second result under the same parent than previous shown
      result was losing the information of its visibility or not, since showing previous result
      already unhid everything above it.
    - Corrected a blocking bug introduced in 2.0.18 with new internal acceleration tree structure,
      of failure at start when a bookmark was created while the add-on was not active.
      Emergency fix ..
- 2.0.18 Bugs & improvements
    - Corrected a bug when moving a folder holding separators in FF 56, where separators were not
      shown again.
    - Corrected a bug when creating or inserting a bookmark in FF 56 as last child of its parent
      after separator(s) (going undetected until a non separator is created after them, because of
      FF 56 limitations), where this/those separator(s) was(were) not shown.
    - A little more internal traces to understand better impact of local store load / save durations.
    - Accelerated operations like copy, cut, move (drag & drop) and create new bookmark when there
      are lots of bookmarks, by building an internal tree representation of the bookmark nodes
      rather than relying solely on a flat adjacency list plus the displayed bookmark table rows
      with levels.
      This also prepares for next acceleration phase, for quick switch on and off of the sidebar,
      in a further release.
    - Corrected a bug where context menus where going too much on left (or on top) when the sidebar
      width (or height) was insufficient for the context menu width (or height).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/38
    - Improved context menus width behavior to adapt when user is setting the minimum character size
      in FF Options to a value higher than default menu fonts.
      They are now expanding to the right to avoid cutting menu items.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/38
    - Added detection of when we lose keyboard focus to close context menus if they are open.
      This makes context menus more friendly now.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/38
    - Added a toolbar button for switching on and off the sidebar.
      For now, the switch on is still a little long when there are lots of bookmarks (10000 or more).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/18
        https://github.com/aaFn/Bookmark-search-plus-2/issues/36
    - Update search result to show the "waiting favicon refresh" when we refresh a favicon, if
      there is a search result open.
- 2.0.17 Bugs
    - Added support for Mobile bookmarks when not empty (no way to know that Mobile bookmarks / sync
      is activated or not).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/33
    - Added a better status of migration to 16x16 favicons, some more robustness to it, and
      a way to retrigger it in case it is believed it didn't complete properly.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/35
- 2.0.16 Improvements
    - Decreased memory usage on massive favicon loads by spacing the saves to local storage.
      Apparently, browser.storage.local.set() is leaving significant chunks of memory to garbage
      collect, and having saves too close to each other (initially at each new favicon load)
      is not sparing enough time for the GC to officiate properly.
    - Improved display performances by around 200% through converting favicons to 16x16 when
      fetching them, and storing them in that format for later load and display.
      This avoids that conversion occurs each time the add-on is loaded, when displaying the
      favicons. This is so yielding a decrease of load/waiting duration by about 50% on my
      machine with around 1900 bookmarks and as many favicons.
      This is also using much less local storage + decreasing by 2 the duration to save favicons.
      No visual impact to favicons, thanks to rewriting on my own some of the Canvas 2d context
      drawImage() algorithms, which are a little poor :-(
      A migration task has been added to trigger only once, 1 minute after add-on loading,
      and until all stored valid favicons are converted, so that this improvement applies also to
      existing favicons.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/2
- 2.0.15 Bugs and improvements
    - Fix menu sizes not being consistent on Linux variation.
    - Added an option to disable favison retrieval, as some users really do not use favicons.
      Note that this allows to trigger massive refresh of all favicons, apart from the initial
      load at install of the add-on, by setting the option, reloading the add-on, then removing
      the option, and reloading again the add-on.
      So removing the corresponding TODO, since this is done through this sequence.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/30
    - Added option to remember size of resizeable objects = search pane, and bookmark properties
      popup.
      Along with a "Reset to defaults" button to come back to defaults if needed.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/26
- 2.0.14 Bugs
    - Corrected regression on drop into folder brought by 2.0.13.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/27
    - Scroll to center for "Show bookmark" is only supported with FF > 58.0, so only
      apply that improvement for versions >= 58.0, and revert to old behavior in older
      version.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/25
- 2.0.13 Bugs and improvements
    - Fix folder twistie color change when hovering the mouse on a selected folder row
      (it was not highlighting).
    - Added context menu on top (system) folders to allow creating bookmarks, folders and
      separators inside them. Also allowed paste into them, and drag and drop into them,
      like native sidebar.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/27
    - Modified scrolling behavior on "Show bookmark" for a search result, to now show the
      bookmark at center of bookmark pane, so as to make previous context visible (previous
      siblings, parents if no too far ..).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/25
- 2.0.12 Bugs and improvements
    - Small adjustment to highlight colors to make things more consistent between search pane
      and bookmark pane.
    - Made the insertion line a little more color intense when dragging bookmarks for better
      visiblity.
    - Firmed up support for FF56. However, there are limitations: separators are not well
      supported by the WebExtension API until FF57, so I have to make them non movable and
      non deleteable. Also there is no way to create a separator in the API, so that
      operation is not supported.
      And there are cases where we can't know that there is a separator, typically when the
      separator is the last item in a folder.
      Some other limitations/bugs like new tabs cannot refer to a parent tab, so they are
      always created at end, and not besides current open tab. Or open bookmark in a new window
      does not get the sidebar loaded, you have to go to the menus or to use the shortcut key
      to force their loading. Or no way to have a timeout on failing connections, so favicon
      retrieval can be slower in case of errors.
      Plus probably some others I didn't catch ..
      => I strongly advise to upgrade to FF57 or higher !
        https://github.com/aaFn/Bookmark-search-plus-2/issues/23
    - Changing minimum version of the add-on to be on FF 56, instead of FF 54. FF 56 appears to
      be the real minimum I can support ..
- 2.0.11 Bugs and improvements
    - Some more robusteness against odd bookmarks
        https://github.com/aaFn/Bookmark-search-plus-2/issues/23
    - Correct option "close search after show bookmark" to imply "leave tree open", else
      user can end up not seeing the bookmark when the tree goes back to closed state.
    - Changed the highlight behavior on focus and results to something hopefully simpler
      and less confusing. Benefit is that after search pane close, a shown bookmark remains
      highlighted if it is still visible.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/20
- 2.0.10 Bugs and improvements
    - Added option to immediately close search pane after showing a bookmark, per users
      demand. Unchecked by default.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/20
    - Added close of search pane when Esc is pressed anywhere in the sidebar, plus set focus
      to the search box, if no context menu to close.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/20
    - Tried to make faster and less conspicuous the change of position when opening bookmark
      property popups, necessary because position is ignored by FF when creating popups/panels
        https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/windows/create
    - Added support of two settings of FF which are made available to add-ons as of FF 59.x,
      for opening bookmarks and search results in new tabs, instead of in current tab by
      default:
        about:config browser.tabs.loadBookmarksInTabs
        about:config browser.search.openintab setting
        Cf. https://github.com/aaFn/Bookmark-search-plus-2/issues/22
    - Added robustness in the code for unusual cases where bookmarks have no type field, and
      so we need to use the presence of the url field to distinguish between folders and bookmarks.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/23
    - Removed a memory leak due to URL object which needs to be revoked after it has been
      instantiated with "new URL (xx)", in favicon retrieval background process (worker),
      as documented in https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
      and in https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL.
      This could get to very high amounts of memory on initial load of the add-on when all
      bookmarks require favicon retrieval, and crash FF.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/12
- 2.0.9 Bugs and improvements
    - Refresh search pane on favicon change/update for a bookmark when the pane is open,
      in case a search result contains that bookmark, to display the favicon change in
      "real time".
    - Corrected a bug where pressing Enter in the Bookmark edition popup does not always save
      last modifications.
    - Corrected a bug which was not measuring properly save times for bookmark states when
      enabling traces.
    - Protect against oddities (neither bookmark nor folder nor separator, or bookmark
      objects which are incomplete like without a URL), and trace them.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/23
- 2.0.8 Improvements
    - Save the bookmark property popup position when closing it, and restore it at the same
      place. Exception: if invisible / in a different screen, then center it on same screen
      as browser Window.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/19
    - Added Escape and Enter keyboard shortcuts in the popup to Save/Add or Cancel/Close.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/19
    - Changed behavior of the favicon fetches to avoid annoying user/password prompts by
      default. This can somewhat decrease the success rate of getting favicons though, so adding
      an option to enable cookies passing, with the annoying side effect of these prompts.
      Note that clicking "Refresh favicon" on the context menu always includes authentication.
      This allows to "force" favicon retrieval with higher chances.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/21
- 2.0.7 Improvements
    - Large performance improvement on insert / move / delete bookmark.
      This was not visible with medium numbers of bookmarks (up to 10000), but getting more
      and more visible with very big numbers beyond that (some people have nearly 80000 bookmarks).
      This is now a constant and nearly instantaneous time to execute such operations on the tree,
      independent of the number of bookmarks or of the distance between source and destination
      positions in case of move.
    - Introducing experimental mode of delaying load / display of non visible bookmarks, for
      people having very big numbers of bookmarks (cf. nearly 80000 above).
      However, hitting https://bugzilla.mozilla.org/show_bug.cgi?id=1396364 .. which is putting
      to a halt that effort for now.
      This would be a major breakthrough for those people, with fast availability of
      the sidebar to start working with it, while hidden bookmarks are still being loaded in the
      sidebar behind the scene.
      So for now this mode is not effective, I am leaving the preference in the options page,
      and the code for it inside, but not activating it, until either the bug is corrected,
      or I devise a workaround.
    - A few adjustments to preferences panel.
    - Forbid a paste into cut folder (would lead to unpredicatble result ..).
    - Added the version in the add-on title, and show it when hovering on the search magnifying
      glass.
- 2.0.6 Improvements
    - Added dynamic refresh of search results (if there is a search active) when a bookmark or
      folder (but not a separator) is created, modified or removed.
      This allows to keep the search pane active for longer, while working on  the tree.
    - Adapted fonts on Windows platform so that Windows 7 looks more in line with Windows 10,
      specifying "Segoe UI" instead of "caption". This results in no change for Windows 10,
      as "caption" is mapped to "Segoe UI" in that platform. However, "caption" was mapped to
      "tahoma" under Windows 7, ending in a very different look.
    - Decreased fonts from 13px to 12px on Mac, like in Linux, as it was a little too big
      compared to native FF Bookmark sidebar.
    - Added "Open parent(s)" action in context menu of a shown result, to open all parent
      folders if the row was hidden, and if the preference "After "Show Bookmark", leave bookmark
      open by default when closing search" is not set (if set, Open parent(s) is done automatically).
    - Simplified wording for preferences, using shorter sentences for better readability.
    - Gained around 10% on display performances during initial load by removing the usage of
      DocumentFragment, which was supposed to improve things but apparently doesn't ..
    - Prepared things for the experimental delayed load feature for large bookmark trees,
      which should accelerate significantly the availability of the sidebar interface.
      There is however a caveat :-(
      Per documentation, FF does not give the separators when calling bookmarks.getChildren()
      (nor bookmarks.get()) ..!
      So I have to stick for now to bookmarks.getTree() (or bookmarks.getSubTree()) which is still
      long in itself, and I have no way to break it in smaller pieces ..
      However, from experience, this is around 1/3rd of the total time, so that should still allow
      to be faster by a factor of around 3 for people with large number of bookmarks ...
- 2.0.5 Bugs and improvements
    - Added support for drag and dropping the (i) icon of the Location bar
        https://github.com/aaFn/Bookmark-search-plus-2/issues/8
    - Changed shortcut for MacOS to Alt+B
        https://github.com/aaFn/Bookmark-search-plus-2/issues/4
    - Corrected a bug when copy-pasting into a folder
    - Changed cut behavior to leave bookmark in place, but dimmed, until it is
      pasted (moved) into its new place.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/15
    - Changed menu "Paste" action to "paste before" to make it more obvious, compared
      to "Paste into".
    - Removed a limitation that inserting/creating a bookmark was not visible immediately
      when under a closed folder which was however expanded because of a show result in bookmark
      pane.
    - Corrected a bug when dragging a link to the bookmark tree and its title had special
      characters like "|", which made the properties panel showing trunked information.
    - Changed order of actions in search result context menu for a bookmark to ensure the default
      action is always at top.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3
    - Revamped a little the Options panel.
    - Changed default behavior on search results to always "Show bookmark" only (unless Shift is
      pressed at same time, which is opening the result bookmark in active tab at same time).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/14
    - Added an Advanced mode preference for users who want to keep a varying behavior when clicking on
      different parts of a search result bookmark, like was the case in old "Sidebar Bookmark
      Search Plus" (default being not checked, in line with previous item):
      - "Show bookmark" only when clicking outside favicon and text,
      - "Show bookmark" + "Open" in active tab when clicking on favicon or text.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/14 
    - Improved context menu in Advanced mode on search result bookmarks, to highlight "Show bookmark"
      as default action when right clicking outside of favicon and text, and "Open" when
      right clicking on favicon or text.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3
    - Added quit context menu through Esc key without selecting anything when the sidebar has
      focus
        https://github.com/aaFn/Bookmark-search-plus-2/issues/9 
    - Added close search on pressing Esc key when the search input has focus
        https://github.com/aaFn/Bookmark-search-plus-2/issues/10
    - Added a preference <[ ] On "Show bookmark", force state to open for all ancestor folders of shown
      bookmark> to set to open state all folders leading to the bookmark being shown from a search
      result.
      Default value of the preference is unchecked = those folder have their current state untouched,
      showing all bookmarks on the path to the selected one independent of close or open state
      of their folders. When checked, those folders are forced to open state.
      In both cases, checked or unchecked, the user can modify the state of folders by clicking
      on twisties.
      And when closing the search, the tree is reset to the state of each folder at moment of
      search close: open folders remain open, and closed folders have their bookmarks hidden again.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/6
- 2.0.4 Bugs and improvements
    - Display text besides the animated waiting image at add-on load, to explain this is is for
      loading and preparing bookmarks pane.
    - Added some perf measurements in traces about loading & displaying, to prepare for
      assessing any perfs impact or display improvements of true asynchronous load when coming.
    - Display in traces font-family and size used by the platform to prepare for adding an option
      later of setting fonts.
    - Cosmetics on row highlighting
    - Streamlined display structure to gain a few marginal perfs.
    - Removed a weird effect on continuous window actions (= drag, move vertical scroll bar ..)
      being delayed or perturbed while loading favicons = hashed move, non responsive for some
      time, action registered but happening much later ..
      Looks ok now, but not sure of the exact cause, signal me if there is still some problems.
    - Added "Show bookmark" action in results context menu in search pane, as another
      way to show the source row, in addition to clicking outside favicon or text part.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3 
    - Added Shift+Click to systematically open a bookmark or search result in current tab,
      wherever we click on the row (without Shift, this is only when clicking on the favicon
      or on the text).
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3 
    - Configured Middle click on bookmarks to open in a new tab next to current bookmark.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/3 
    - Corrected a bug when dragging a tab over results rows and going to bookmarks pane,
      triggering a TypeError: row is undefined.
    - Corrected a bug where menu entries in bold (= default) in a context menu were not actioned.
    - Corrected a few minor bugs, no effect, but cleaner without them.
- 2.0.3 Bugs and improvements
    - Corrected bug on search result highlight showing all items under first open ancestor,
      and not just the ones at higher level on the path to that ancestor
    	https://github.com/aaFn/Bookmark-search-plus-2/issues/6
    - Corrected behavior of insert (right click) so as to insert a new item into a folder and
      not before it, to better mimick the native FF Bookmark sidebar behavior.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/5
    - Changed the keyboard shortcut to Ctrl+Shift+B in Linux and to Ctrl+Q for other platforms,
      for not hitting already existing combinations on FF .. (which vary by platform)
        https://github.com/aaFn/Bookmark-search-plus-2/issues/4
    - Changed default state of folders when no info on them (add-on install, or new folder)
      so that the folder is now closed by default.
      That should make life easier for people with large number of bookmarks, and is also
      preparing for visual perf improvement with asynchronous/background load and display,
      an improvement to come later.
        https://github.com/aaFn/Bookmark-search-plus-2/issues/6
- 2.0.2	Reduce console logging to only error cases when retrieving favicons
- 2.0.1	Initial release version


LIMitations / TODO's:
---------------------
- TODO: Internationalization (i18n) of the UI with users who want to help.
  Currently only english available.

- TODO: I have no Mac nor Open/FreeBSD, cannot verify how this is behaving under them, and if
  there are also variations / different bugs there .. I am hoping that since these are all
  BSD UNIX, this is similar or not far from Linux .. Have to rely solely on user feedback
  for that piece.

- TODO: Android and Chrome OS also ? Are mobile users going to have that many bookmarks and
  install + make use of that extension ?? Again, will wait for user feedback.

- TODO: Ignore favicon links when they are in comments when retrieving favicons from a page
  (since I am using a quick parser of my own, it is not semantical, and therefore it is misled
   when there are such rel= links inside comments <!-- -->, as it takes them for real).
   This is a rare case, but it happens.
   For examble: https://sol-resine.ooreka.fr/comprendre/resine-sol-garage
 
- TODO: Add section to show the current tab as a "simili bookmark", allowing:
    - local (inside sidebar, more practical) drag & drop for bookmark creation,
    - on double click or right click menu, expands as a tabs panel for switching very quickly when we
      have large number of open tabs (similar to "Tab Sidebar" and "Vertical Tabs Reloaded" add-ons),
    - double click back or right click menu on it to restore the Bookmarks view,
    - and most of all to search on them (not available in the two mentioned add-ons).

- TODO: Be able to select and manipulate multiple bookmark items with Shift+arrow-up/down,
  Shift-hold+click and Ctrl-hold+click.



- LIM: When retrieving favicons, it seems that following redirects in fetch() is not perfect,
  and so we end up with Network errors where the normal browser on such a page gets to some
  other page and finds a favicon ..
  Tried {redirect: "follow"} without success ... :-(

- LIM: Did not find a way in Web Extension API's to open modal dialogs for "New bookmark.." and
  "New folder.." actions on context menus.
  So these are normal popups .. hope this won't be too much trouble. 

- LIM: No access to the sqlite db of favicons. So I had to code myself the fetch of favicons
  from pages, and then save them into local storage for next time the sidebar is loaded.
  This could make initial load of the add-on quite active, and so I spaced retrieval actions
  so as to not overload the normal browser process.
  On next loads after initial, things are retrieved from local storage, so this is fast.
  Note: the web retrieval process is not based on 'http://www.google.com/s2/favicons?domain_url='
    as some other add-ons do, as I it can be seen as a privacy issue leaking info to google.
    Instead, I am retrieving the favicon URL from inside the bookmarked HTML page with my own
    quick parser as said above.

- LIM: No management / display of bookmark tags, keywords, description field .. as Firefox does
  not expose those fields through its Web Extension API's.
  See https://bugzilla.mozilla.org/show_bug.cgi?id=1225916

- LIM: No way to synchronize the folders open state with the native FF bookmarks sidebar,
  or with the "All bookmarks" window, as this is not exposed by the Web Extension API's.

- LIM: The add-on works with FF56, however:
    - Separators are not perfectly managed with the add-on because of FF56 limitations.
    - It is not possible to create separators with the add-on, the function was made available
      in the FF API only from version 57.
    - Separators at end of a folder go undetected until there's something added after them in
      the bookmarks library in the native bookmark sidebar. Again goes away with FF57 and later.
    - Also, the button is doing nothing, because the API function of opening/closing the sidebar
      is only available with FF57 and higher.
      So I am disabling it under FF56 .. Please remove it from the toolbar manually when using FF56,
      it is useless in that version (but there is no way in code to make it appear conditionnally
      to the FF version .. it is there for all or not there for all .. :-( ).